`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 07/26/2024 05:53:45 PM
// Design Name: 
// Module Name: AM2910_tb_instr
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module AM2910_tb_instr;
    // Inputs
    reg [11:0] di;
    reg clk;
    reg ci;
    reg cc;
    reg oe;
    reg rld;
    reg [3:0] instr;
    reg we;
    reg [19:0] mem_di;
    reg [10:0] addr;
   
    // Outputs
    wire pl;
    wire map;
    wire vect;
    wire full;
    wire [11:0] y;
    wire [19:0] mem_do;
   
    am2910 uut (
        .di(di),
        .clk(clk),
        .rld(rld),
        .ci(ci),
        .cc(cc),
        .instr(instr),
        .oe(oe),
        .pl(pl),
        .map(map),
        .vect(vect),
        .full(full),
        .y(y)
    );
   
    memorie mem(.clk(clk),
                .we(we),
                .di(mem_di),
                .addr(addr),
                .do(mem_do));
    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end
   
   
    initial
    begin
       
       // instr 0-15 cu cc negat 0
       
            we = 1;
            addr = 0;
            mem_di = {12'b0, 4'b0000, 1'b0, 1'b1, 1'b0, 1'b1};
       
       #20
            addr = 11'b1;
            mem_di = {12'b1, 4'b0001, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b10;
            mem_di = {12'b10, 4'b0010, 1'b0, 1'b1, 1'b0, 1'b1};
       #20    
            addr = 11'b11;
            mem_di = {12'b11, 4'b0011, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b100;
            mem_di = {12'b100, 4'b0100, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b101;
            mem_di = {12'b101, 4'b0101, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b110;
            mem_di = {12'b110, 4'b0110, 1'b0, 1'b1, 1'b0, 1'b1};
           
       #20
            addr = 11'b111;
            mem_di = {12'b111, 4'b0111, 1'b0, 1'b1, 1'b0, 1'b1};
           
       #20
            addr = 11'b1011;
            mem_di = {12'b1011, 4'b1011, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b1000;
            mem_di = {12'b1000, 4'b1000, 1'b0, 1'b1, 1'b0, 1'b1};
       
       #20
            addr = 11'b1001;
            mem_di = {12'b1001, 4'b1001, 1'b0, 1'b1, 1'b0, 1'b1};
       #20            
            addr = 11'b1010;
            mem_di = {12'b1010, 4'b1010, 1'b0, 1'b1, 1'b0, 1'b1};

       #20
            addr = 11'b1100;
            mem_di = {12'b1100, 4'b1100, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b1101;
            mem_di = {12'b1101, 4'b1101, 1'b0, 1'b1, 1'b0, 1'b1};
       #20
            addr = 11'b1110;
            mem_di = {12'b1110, 4'b1110, 1'b0, 1'b1, 1'b0, 1'b1};
           
       #20
            addr = 11'b1111;
            mem_di = {12'b1111, 4'b1111, 1'b0, 1'b1, 1'b0, 1'b1};
   
        // instr 0-15 cu cc negat 1
         #20
            we = 1;
            addr = 11'b10000;
            mem_di = {12'b0, 4'b0000, 1'b1, 1'b1, 1'b0, 1'b1};
       #20

            addr = 11'b10001;
            mem_di = {12'b1, 4'b0001, 1'b1, 1'b1, 1'b0, 1'b1};
           
        #20
            addr = 11'b10010;
            mem_di = {12'b10, 4'b0010, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b10011;
            mem_di = {12'b11, 4'b0011, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b10100;
            mem_di = {12'b100, 4'b0100, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b10101;
            mem_di = {12'b101, 4'b0101, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b10110;
            mem_di = {12'b110, 4'b0110, 1'b1, 1'b1, 1'b0, 1'b1};
           
         #20
            addr = 11'b10111;
            mem_di = {12'b111, 4'b0111, 1'b1, 1'b1, 1'b0, 1'b1};
         #20
            addr = 11'b11000;
            mem_di = {12'b1000, 4'b1000, 1'b1, 1'b1, 1'b0, 1'b1};
       
        #20
            addr = 11'b11001;
            mem_di = {12'b1001, 4'b1001, 1'b1, 1'b1, 1'b0, 1'b1};
           
        #20
            addr = 11'b11010;
            mem_di = {12'b1010, 4'b1010, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b11011;
            mem_di = {12'b1011, 4'b1011, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b11100;
            mem_di = {12'b1100, 4'b1100, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b11101;
            mem_di = {12'b1101, 4'b1101, 1'b1, 1'b1, 1'b0, 1'b1};
        #20
            addr = 11'b11110;
            mem_di = {12'b1110, 4'b1110, 1'b1, 1'b1, 1'b0, 1'b1};
           
         #20
            addr = 11'b11111;
            mem_di = {12'b1111, 4'b1111, 1'b1, 1'b1, 1'b0, 1'b1};

          #60;

        $finish;
    end
        // utilizarea a ceea ce am in memorie in top
    initial begin
        di = 12'b0;
        ci = 1;
        cc = 0;
        oe = 1;
        rld = 0;
        instr = 4'b0;
        we = 1;
        addr = 0;
        mem_di = 20'b0;
       
        forever #20
            begin
            {di, instr, cc, oe, rld, ci} = mem_do;
            addr = addr+1;
            end
       
    end
endmodule    
